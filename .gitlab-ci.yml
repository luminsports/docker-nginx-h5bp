stages:
  - Build

variables:
  ECR_REPOSITORY: "public.ecr.aws/luminsports"
  IMAGE_NAME: "nginx-h5bp"

.build:
  stage: Build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache python3 py3-pip
    - python3 -m ensurepip
    - pip3 install --no-cache awscli
    - aws --version
    - docker --version
    - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin "public.ecr.aws/luminsports"

Build:
  extends: .build
  rules:
    - if: $CI_PIPELINE_SOURCE != "schedule"
  script:
    - echo "Building image..."
    - docker build --pull --file ./Dockerfile --tag $ECR_REPOSITORY/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA --tag $ECR_REPOSITORY/$IMAGE_NAME:latest .
    - echo "Pushing image..."
    - docker push $ECR_REPOSITORY/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - docker push $ECR_REPOSITORY/$IMAGE_NAME:latest

Build (scheduled):
  extends: .build
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - echo "Building image..."
    - docker build --pull --file ./Dockerfile --tag $ECR_REPOSITORY/$IMAGE_NAME:latest .
    - echo "Pushing image..."
    - docker push $ECR_REPOSITORY/$IMAGE_NAME:latest
